{"version":3,"file":"contentful-rich-text-to-markdown.esm.js","sources":["../src/renders/block-fallback.ts","../src/renders/block-embedded-entry.ts","../src/helpers.ts","../src/renders/block-embedded-asset.ts","../src/renders/block-paragraph.ts","../src/renders/block-heading.ts","../src/renders/block-use-child.ts","../src/renders/block-list-item.ts","../src/renders/block-hr.ts","../src/renders/block-quote.ts","../src/renders/inline-hyperlink.ts","../src/renders/inline-entry-hyperlink.ts","../src/renders/inline-embedded-entry.ts","../src/renders/marks.ts","../src/renders/index.ts","../src/validate-entry.ts","../src/index.ts"],"sourcesContent":["import { NodeRenderer } from '../index'\n\nexport const renderBlockFallback: NodeRenderer = node => {\n  return `\\n\\n<!-- Fallback: type=${node.nodeType} -->\\n\\n`\n}\n","import { EntryPlain, NodeRenderer, RenderEmbeddedModelContext, validateEntry } from '../index'\n\nexport const renderBlockEmbeddedEntry: NodeRenderer = (node, context) => {\n  const entry = node.data.target as EntryPlain\n  const entryId = entry?.sys?.id\n  const entryType = entry?.sys?.contentType?.sys?.id\n\n  const { options } = context\n  const validateResult = validateEntry(entry, context)\n\n  if (validateResult !== true) {\n    if (options.onModelInvalid) {\n      options.onModelInvalid(entry, validateResult || '')\n    }\n\n    return ''\n  }\n\n  let renderModel = context.options.renderModels[entryType]\n  if (!renderModel) {\n    if (!context.options.renderModels.fallback) {\n      throw new Error(`Embedded entry render not defined: type=${entryType} id=${entryId}`)\n    }\n\n    renderModel = context.options.renderModels.fallback\n  }\n\n  const renderContext: RenderEmbeddedModelContext = {\n    ...context,\n    get contentDataPath() {\n      return entryId\n    },\n  }\n  const data = renderModel(entry, renderContext)\n\n  return `\\n\\n${data.trim()}\\n\\n`\n}\n","export type AppendFunction = {\n  (value: string, index: number): string\n}\n\nexport function prependLines(content: string, append: string | AppendFunction): string {\n  return content\n    .split(/\\n/g)\n    .map((str, index) => {\n      const appendString = typeof append === 'string' ? append : append(str, index)\n      return `${appendString}${str}`\n    })\n    .join('\\n')\n}\n\ntype RegexMatchGroups<Keys extends string = ''> = Record<Keys, unknown>\n\nexport function extractRegExp<Groups extends string>(re: RegExp, str: string): [boolean, RegexMatchGroups<Groups>] {\n  re.lastIndex = 0\n  const result = re.exec(str)\n  if (result) {\n    return [true, (result.groups || {}) as RegexMatchGroups<Groups>]\n  }\n\n  return [false, {} as RegexMatchGroups<Groups>]\n}\n\nexport function extractRegExps<Groups extends string>(\n  regexes: Array<RegExp>,\n  str: string\n): [boolean, RegexMatchGroups<Groups>] {\n  for (const regex of regexes) {\n    const result = extractRegExp<Groups>(regex, str)\n    if (result[0]) return result\n  }\n\n  return [false, {} as RegexMatchGroups<Groups>]\n}\n\nexport function prependNotEmpty(content: string, prependContent: string): string {\n  if (!content) return content\n  return `${prependContent}${content}`\n}\n\nexport function prependUrlProtocol(url: string, protocol = 'https'): string {\n  if (url.startsWith('//')) return `${protocol}:${url}`\n  return url\n}\n","import { NodeRenderer } from '../index'\nimport { Asset } from '../contentful-data-types'\nimport { prependUrlProtocol } from '../helpers'\n\nexport const renderBlockEmbeddedAsset: NodeRenderer = (node, { options }) => {\n  const asset = node.data.target as Asset\n\n  const url = options.prependUrlProtocol ? prependUrlProtocol(asset.fields.file.url) : asset.fields.file.url\n\n  return `\\n\\n![${asset.fields.title}](${url})\\n\\n`\n}\n","import { NodeRenderer } from '../index'\n\nexport const renderBlockParagraph: NodeRenderer = (_, { next, parent }) => {\n  const childrenContent = next()\n\n  if (!childrenContent.length) return ''\n  if (parent) return `\\n${childrenContent}\\n`\n\n  return `\\n\\n${childrenContent}\\n\\n`\n}\n","import { NodeRenderer } from '../index'\n\nexport const createRenderBlockHeading: (level: number) => NodeRenderer = level => {\n  return (_, { next }) => `\\n${'#'.repeat(level)} ${next()}\\n`\n}\n","import { NodeRenderer } from '../index'\n\nexport const renderBlockUseChild: NodeRenderer = (_, { next }) => next()\n","import { NodeRenderer } from '../index'\nimport { BLOCKS } from '@contentful/rich-text-types'\nimport { prependLines } from '../helpers'\n\nexport const renderBlockListItem: NodeRenderer = (_, { next, parent, index }) => {\n  const isOL = parent?.nodeType === BLOCKS.OL_LIST\n  const listChar = isOL ? `${(index || 0) + 1}.` : '-'\n  const child = next()\n\n  if (!child) return ''\n\n  const childPadding = prependLines(child, () => `    `).trim()\n\n  return `${listChar} ${childPadding}\\n`\n}\n","import { NodeRenderer } from '../index'\n\nexport const renderBlockHr: NodeRenderer = () => '\\n\\n---\\n\\n'\n","import { NodeRenderer } from '../index'\nimport { prependLines } from '../helpers'\n\nexport const renderBlockQuote: NodeRenderer = (node, { next }) => {\n  const child = next(node.content).trim()\n\n  return prependLines(child, '> ')\n}\n","import { NodeRenderer } from '../index'\nimport { extractRegExps, prependUrlProtocol } from '../helpers'\nimport { Asset } from '../contentful-data-types'\n\nfunction renderLink(rawContent: string, link: string): string {\n  const [isMatch, groups] = extractRegExps<'title' | 'content'>(\n    [/^\\[(?<title>.+)](?<content>.*)$/, /^(?<content>.*)\\[(?<title>.+)]$/],\n    rawContent\n  )\n\n  if (!isMatch) {\n    return `[${rawContent}](${link})`\n  }\n\n  return `[${groups.content}](${link} \"${groups.title}\")`\n}\n\nexport const renderInlineHyperlink: NodeRenderer = (node, { next }) => {\n  const rawContent = String(next()).trim()\n  const link = node.data.uri\n\n  return renderLink(rawContent, link)\n}\n\nexport const renderInlineAssetHyperlink: NodeRenderer = (node, { next, options }) => {\n  const rawContent = String(next()).trim()\n  const asset = node.data.target as Asset\n  const link = options.prependUrlProtocol ? prependUrlProtocol(asset.fields.file.url) : asset.fields.file.url\n\n  return renderLink(rawContent, link)\n}\n","import { EntryPlain, NodeRenderer } from '../index'\n\nexport const renderInlineEntryHyperlink: NodeRenderer = (node, { next }) => {\n  const entry = node.data.target as EntryPlain\n  const content = next()\n\n  return `<span data-node-type='${node.nodeType}' data-sys-id='${entry.sys.id}'>${content}</span>`\n}\n","import { EntryPlain, NodeRenderer } from '../index'\n\nexport const renderInlineEmbeddedEntry: NodeRenderer = node => {\n  const entry = node.data.target as EntryPlain\n\n  return `<span data-node-type='${node.nodeType}' data-sys-id='${entry.sys.id}'></span>`\n}\n","import { MarkRenderer } from '../index'\n\nconst renderMarkBold: MarkRenderer = text => `**${text}**`\nconst renderMarkItalic: MarkRenderer = text => `*${text}*`\nconst renderMarkUnderline: MarkRenderer = text => `<u>${text}</u>`\nconst renderMarkCode: MarkRenderer = text => `<code>${text}</code>`\n\nexport { renderMarkBold, renderMarkItalic, renderMarkUnderline, renderMarkCode }\n","import { BLOCKS, INLINES, MARKS } from '@contentful/rich-text-types'\nimport { ModelRender, RenderMark, RenderNode } from '../index'\n\nimport { renderBlockFallback } from './block-fallback'\nimport { renderBlockEmbeddedEntry } from './block-embedded-entry'\nimport { renderBlockEmbeddedAsset } from './block-embedded-asset'\nimport { renderBlockParagraph } from './block-paragraph'\nimport { createRenderBlockHeading } from './block-heading'\nimport { renderBlockUseChild } from './block-use-child'\nimport { renderBlockListItem } from './block-list-item'\nimport { renderBlockHr } from './block-hr'\nimport { renderBlockQuote } from './block-quote'\nimport { renderInlineAssetHyperlink, renderInlineHyperlink } from './inline-hyperlink'\nimport { renderInlineEntryHyperlink } from './inline-entry-hyperlink'\nimport { renderInlineEmbeddedEntry } from './inline-embedded-entry'\n\nimport * as Marks from './marks'\n\nexport const marks: RenderMark = {\n  [MARKS.BOLD]: Marks.renderMarkBold,\n  [MARKS.ITALIC]: Marks.renderMarkItalic,\n  [MARKS.UNDERLINE]: Marks.renderMarkUnderline,\n  [MARKS.CODE]: Marks.renderMarkCode,\n}\n\nexport const blocks: RenderNode = {\n  [BLOCKS.PARAGRAPH]: renderBlockParagraph,\n  [BLOCKS.HEADING_1]: createRenderBlockHeading(1),\n  [BLOCKS.HEADING_2]: createRenderBlockHeading(2),\n  [BLOCKS.HEADING_3]: createRenderBlockHeading(3),\n  [BLOCKS.HEADING_4]: createRenderBlockHeading(4),\n  [BLOCKS.HEADING_5]: createRenderBlockHeading(5),\n  [BLOCKS.HEADING_6]: createRenderBlockHeading(6),\n  [BLOCKS.EMBEDDED_ENTRY]: renderBlockEmbeddedEntry,\n  [BLOCKS.EMBEDDED_ASSET]: renderBlockEmbeddedAsset,\n  [BLOCKS.UL_LIST]: renderBlockUseChild,\n  [BLOCKS.OL_LIST]: renderBlockUseChild,\n  [BLOCKS.LIST_ITEM]: renderBlockListItem,\n  [BLOCKS.QUOTE]: renderBlockQuote,\n  [BLOCKS.HR]: renderBlockHr,\n  [INLINES.ASSET_HYPERLINK]: renderInlineAssetHyperlink,\n  [INLINES.ENTRY_HYPERLINK]: renderInlineEntryHyperlink,\n  [INLINES.EMBEDDED_ENTRY]: renderInlineEmbeddedEntry,\n  [INLINES.HYPERLINK]: renderInlineHyperlink,\n  fallback: renderBlockFallback,\n}\n\nexport const modelRenderFallback: ModelRender<any> = (entry, context) => {\n  const { addContentData, contentDataPath, options } = context\n  const sysId = entry?.sys?.id || 'unknown'\n  const type = entry?.sys?.contentType?.sys?.id || 'unknown'\n  const tagName = options.modelFallbackComponentName\n  const fields = entry.fields\n\n  if (fields) {\n    const dataPath = addContentData(fields, contentDataPath)\n    return `<${tagName} type='${type}' sys-id='${sysId}' :fields='${dataPath}'></${tagName}>`\n  }\n\n  return `<${tagName} type='${type}' sys-id='${sysId}' :fields='{}'></${tagName}>`\n}\n","import { EntryPlain, ModelValidate, RenderContext } from './index'\n\nexport const baseModelValidate: ModelValidate = entry => {\n  if (!entry) return 'entry is empty'\n  if (!entry?.sys?.contentType?.sys?.id) return 'cannot detect content type'\n  if (!Object.prototype.hasOwnProperty.call(entry, 'fields')) {\n    return 'fields is empty'\n  }\n\n  return true\n}\n\nexport function validateEntry(entry: EntryPlain, context: RenderContext): ReturnType<ModelValidate> {\n  const { options } = context\n  let validResult = baseModelValidate(entry)\n\n  if (validResult !== true) return validResult\n  if (options.modelValidate) {\n    validResult = options.modelValidate(entry)\n  }\n\n  return validResult\n}\n","import {\n  Block,\n  BLOCKS,\n  Document,\n  helpers as richTextHelpers,\n  Inline,\n  INLINES,\n  Mark,\n  MARKS,\n  Text,\n} from '@contentful/rich-text-types'\nimport { Entry } from './contentful-data-types'\n\nimport * as renders from './renders'\nimport * as helpers from './helpers'\n\nexport { helpers, renders }\nexport { Document, BLOCKS, MARKS, INLINES }\n\nexport type EntryPlain<T = unknown> = Pick<Entry<T>, 'sys' | 'fields'>\n\nexport type CommonNode = Text | Block | Inline\n\nexport interface RenderNext {\n  (nodes?: CommonNode[]): string\n}\n\nexport type MarkdownResult = {\n  contentData?: Record<string, unknown>\n  content: string\n}\nexport type RichtextDocumentRender = {\n  (document: Document, options?: Partial<Options>): MarkdownResult\n}\nexport type RichtextDocumentRenderEmbedded = {\n  (document: Document, options?: Partial<Options>): MarkdownResult['content']\n}\nexport type RenderContext = {\n  next: RenderNext\n  embedDocument: RichtextDocumentRenderEmbedded\n  options: Required<Options>\n  parent?: CommonNode\n  index?: number\n  contentData?: Record<string, unknown>\n  addContentData: (value: unknown, name: string) => string\n  combineContentData: (data: Record<string, unknown>) => void\n}\n\nexport interface NodeRenderer {\n  (node: Block | Inline, context: RenderContext): string\n}\n\nexport type RenderEmbeddedModelContext = RenderContext & {\n  contentDataPath: string\n}\n\nexport interface ModelRender<T = unknown> {\n  (entry: EntryPlain<T>, context: RenderEmbeddedModelContext): string\n}\n\nexport interface RenderNode {\n  fallback: NodeRenderer\n\n  [k: string]: NodeRenderer\n}\n\nexport type MarkRenderer = (text: string, parent: CommonNode) => string\n\nexport interface RenderMark {\n  [k: string]: MarkRenderer\n}\n\nexport interface RenderModels {\n  [k: string]: ModelRender<any>\n\n  fallback: ModelRender<any>\n}\n\nexport interface ModelValidate {\n  (entry: Partial<EntryPlain<any>>): boolean | string\n}\n\nexport interface OnModelInvalid {\n  (entry: Partial<EntryPlain<any>>, reason: string): void\n}\n\nexport interface Options {\n  /**\n   * Node renderers\n   */\n  renderNode?: RenderNode\n  /**\n   * Mark renderers\n   */\n  renderMark?: RenderMark\n\n  renderModels?: RenderModels\n\n  prependUrlProtocol?: boolean\n  contentDataName?: string\n  modelFallbackComponentName?: string\n  modelValidate?: ModelValidate\n  onModelInvalid?: OnModelInvalid\n}\n\nconst defaultOnModelOnValid: OnModelInvalid = (entry, reason) => {\n  const entryId = entry?.sys?.id || 'unknown'\n  const entryType = entry?.sys?.contentType?.sys?.id || 'unknown'\n  console.warn(`Entry is invalid: sysId=${entryId} type=${entryType} reason=${reason}`)\n}\nconst defaultOptions = {\n  contentDataName: 'contentData',\n  prependUrlProtocol: true,\n  modelFallbackComponentName: 'RichtextModel',\n  onModelInvalid: defaultOnModelOnValid,\n} as Required<Options>\n\nexport const documentToMarkdown: RichtextDocumentRender = (\n  richTextDocument,\n  options: Partial<Options> = {}\n): MarkdownResult => {\n  if (!richTextDocument || !richTextDocument.content) {\n    return {\n      content: '',\n    }\n  }\n\n  const finallyOptions: Required<Options> = {\n    ...defaultOptions,\n    ...options,\n    renderNode: {\n      ...renders.blocks,\n      ...options.renderNode,\n    },\n    renderMark: {\n      ...renders.marks,\n      ...options.renderMark,\n    },\n    renderModels: {\n      fallback: renders.modelRenderFallback,\n      ...(options.renderModels || {}),\n    },\n  }\n\n  const context: RenderContext = {\n    addContentData(value: unknown, name: string): string {\n      if (!context.contentData) {\n        context.contentData = {}\n      }\n\n      context.contentData[name] = value\n\n      return `${finallyOptions.contentDataName}.${name}`\n    },\n\n    combineContentData(data) {\n      Object.entries(data).forEach(([name, value]) => context.addContentData(value, name))\n    },\n\n    next: () => '',\n\n    embedDocument: (document, embedOptions) => {\n      const result = documentToMarkdown(document, { ...finallyOptions, ...(embedOptions || {}) })\n      if (result.contentData) {\n        context.combineContentData(result.contentData)\n      }\n      return result.content\n    },\n    options: finallyOptions,\n  }\n\n  let content = renderNodeList(richTextDocument.content, context)\n  content = content.replace(/^\\n{2,}/gm, '\\n')\n\n  if (context.contentData) {\n    return {\n      contentData: context.contentData,\n      content: content,\n    }\n  }\n\n  return {\n    content: content,\n  }\n}\n\nfunction renderNodeList(nodes: CommonNode[], context: RenderContext): string {\n  return nodes\n    .map<string>((node, index) => renderNode(node, { ...context, index }))\n    .join('')\n}\n\nfunction renderNode(node: CommonNode, context: RenderContext): string {\n  const { options } = context\n\n  // Render marks\n  if (richTextHelpers.isText(node)) {\n    const nodeValue = node.value\n\n    if (node.marks.length > 0) {\n      return node.marks.reduce((value: string, mark: Mark) => {\n        const markRender = options.renderMark[mark.type]\n\n        if (!markRender) return value\n\n        return markRender(value, node)\n      }, nodeValue)\n    }\n\n    return nodeValue\n  }\n\n  // Render nodes\n\n  const nextNode: RenderNext = nodes => renderNodeList(nodes || node.content, { ...context, parent: node })\n  const nodeType = node.nodeType\n  if (!nodeType) return ''\n\n  const nodeRenderer = options.renderNode[nodeType] || options.renderNode.fallback\n  if (!nodeRenderer) return ''\n\n  return nodeRenderer(node, { ...context, next: nextNode })\n}\n\nexport function asModelRender<T = unknown>(fn: ModelRender<T>): ModelRender<T> {\n  return fn\n}\nexport { validateEntry } from './validate-entry'\n"],"names":["renderBlockFallback","node","nodeType","renderBlockEmbeddedEntry","context","entry","data","target","entryId","sys","id","entryType","contentType","options","validateResult","validateEntry","onModelInvalid","renderModel","renderModels","fallback","Error","renderContext","contentDataPath","trim","prependLines","content","append","split","map","str","index","appendString","join","extractRegExp","re","lastIndex","result","exec","groups","extractRegExps","regexes","regex","prependNotEmpty","prependContent","prependUrlProtocol","url","protocol","startsWith","renderBlockEmbeddedAsset","asset","fields","file","title","renderBlockParagraph","_","next","parent","childrenContent","length","createRenderBlockHeading","level","repeat","renderBlockUseChild","renderBlockListItem","isOL","BLOCKS","OL_LIST","listChar","child","childPadding","renderBlockHr","renderBlockQuote","renderLink","rawContent","link","isMatch","renderInlineHyperlink","String","uri","renderInlineAssetHyperlink","renderInlineEntryHyperlink","renderInlineEmbeddedEntry","renderMarkBold","text","renderMarkItalic","renderMarkUnderline","renderMarkCode","marks","MARKS","BOLD","Marks","ITALIC","UNDERLINE","CODE","blocks","PARAGRAPH","HEADING_1","HEADING_2","HEADING_3","HEADING_4","HEADING_5","HEADING_6","EMBEDDED_ENTRY","EMBEDDED_ASSET","UL_LIST","LIST_ITEM","QUOTE","HR","INLINES","ASSET_HYPERLINK","ENTRY_HYPERLINK","HYPERLINK","modelRenderFallback","addContentData","sysId","type","tagName","modelFallbackComponentName","dataPath","baseModelValidate","Object","prototype","hasOwnProperty","call","validResult","modelValidate","defaultOnModelOnValid","reason","console","warn","defaultOptions","contentDataName","documentToMarkdown","richTextDocument","finallyOptions","renderNode","renders","renderMark","value","name","contentData","combineContentData","entries","forEach","embedDocument","document","embedOptions","renderNodeList","replace","nodes","richTextHelpers","isText","nodeValue","reduce","mark","markRender","nextNode","nodeRenderer","asModelRender","fn"],"mappings":"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"}